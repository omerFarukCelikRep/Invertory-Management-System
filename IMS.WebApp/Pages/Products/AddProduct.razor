@page "/addproduct"

@attribute [Authorize]

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>
<br />

@if (_product != null)
{
    <EditForm Model="_product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Product Name</label>
            <InputText id="name" @bind-Value="_product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="_product.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="_product.Price" class="form-control"></InputNumber>
        </div>
        <ProductInvertoriesComponent 
            @ref="_productInvertoriesComponent"
            OnInvertorySelected="OnInvertorySelected"
        ></ProductInvertoriesComponent>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private Product? _product;
    private ProductInvertoriesComponent _productInvertoriesComponent;

    protected override void OnInitialized()
    {
        _product = new Product();
    }

    private async Task OnValidSubmit()
    {
        if (_product != null)
        {
            _productInvertoriesComponent.ProductInvertories.ForEach(x =>
            {
                x.ProductId = _product.Id;
            });

            //_product.ProductInvertories = _productInvertoriesComponent.ProductInvertories;

            await AddProductUseCase.ExecuteAsync(_product);

            NavigationManager.NavigateTo("/products");
        }
    }

    private void OnInvertorySelected(List<ProductInvertory> productInvertories)
    {
        _product.ProductInvertories = productInvertories;
    }
}
