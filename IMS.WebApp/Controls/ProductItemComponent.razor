@inject NavigationManager NavigationManager
@inject IDeleteProductUseCase DeleteProductUseCase

@if (Product != null)
{
    <tr>
        <td>@Product.Name</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <button type="button" class="btn btn-light" @onclick="@(() => EditProduct(Product.Id))">Edit</button>
            <button type="button" class="btn btn-light" @onclick="@(async () => await DeleteProduct(Product))">Delete</button>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Product? Product { get; set; }

    [Parameter]
    public EventCallback OnProductDelete { get; set; }

    private void EditProduct(Guid id)
    {
        NavigationManager.NavigateTo($"/editproduct/{id}");
    }

    private async Task DeleteProduct(Product product)
    {
        await DeleteProductUseCase.ExecuteAsync(product.Id);

        await OnProductDelete.InvokeAsync();
    }
}
